{"version":3,"sources":["../../server/controllers/converterController.js"],"names":["pdfToImage","require","path","fs","convertData","req","res","next","fileReceived","file","status","json","message","success","filePath","join","__dirname","fileRes","outputPath","returnInfo","setInterval","existsSync","sendFile","clearInterval","error","console","red","test","module","exports"],"mappings":";;;;;;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,yBAAD,CAA1B;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMG,WAAW;AAAA,+BAAG,WAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAC5C,QAAI;AACF,UAAIC,YAAY,GAAGH,GAAG,CAACI,IAAvB;;AACA,UAAID,YAAY,IAAIA,YAAY,CAACN,IAAjC,EAAuC;AACrCM,QAAAA,YAAY,GAAG,WAAWA,YAAY,CAACN,IAAvC;AACD;;AAED,UAAI,CAACM,YAAL,EAAmB;AACjB,eAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,UAAAA,OAAO,EAAE,kBADiB;AAE1BC,UAAAA,OAAO,EAAE;AAFiB,SAArB,CAAP;AAID;;AAED,UAAMC,QAAQ,GAAGZ,IAAI,CAACa,IAAL,CAAUC,SAAV,EAAqBR,YAArB,CAAjB;AAEA,UAAMS,OAAO,SAASjB,UAAU,CAACc,QAAD,EAAW,IAAX,CAAhC;;AACA,UAAIG,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAAlC,EAA4C;AAC1C,YAAMC,UAAU,GAAGhB,IAAI,CAACa,IAAL,CAAUC,SAAV,EAAqB,WAAWC,OAAhC,CAAnB,CAD0C,CAG1C;;AACA,YAAME,UAAU,GAAGC,WAAW,iCAAC,aAAY;AACzC,cAAIjB,EAAE,CAACkB,UAAH,CAAcH,UAAd,CAAJ,EAA+B;AAC7B,kBAAMZ,GAAG,CAACgB,QAAJ,CAAaJ,UAAb,CAAN,CAD6B,CAG7B;;AACAK,YAAAA,aAAa,CAACJ,UAAD,CAAb;AACD;AACF,SAP6B,GAO3B,GAP2B,CAA9B;AAQD,OAZD,MAYO;AACLb,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,UAAAA,OAAO,EAAE,uBADU;AAEnBC,UAAAA,OAAO,EAAE;AAFU,SAArB;AAID;AACF,KAlCD,CAkCE,OAAOW,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,iCAAiCE,GAA/C,EAAoDF,KAApD;AAEAlB,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE,iDADU;AAEnBC,QAAAA,OAAO,EAAE;AAFU,OAArB;AAID;AACF,GA3CgB;;AAAA,kBAAXT,WAAW;AAAA;AAAA;AAAA,GAAjB;;AA6CA,IAAMuB,IAAI;AAAA,gCAAG,WAAOtB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AACrC,QAAI;AACFD,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD,KAJD,CAIE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACD;AACF,GARS;;AAAA,kBAAJG,IAAI;AAAA;AAAA;AAAA,GAAV;;AAUAC,MAAM,CAACC,OAAP,GAAiB;AACfzB,EAAAA,WADe;AAEfuB,EAAAA;AAFe,CAAjB","sourcesContent":["const pdfToImage = require('../utilities/pdfToImage');\nconst path = require('path');\nconst fs = require('fs');\n\nconst convertData = async (req, res, next) => {\n  try {\n    let fileReceived = req.file;\n    if (fileReceived && fileReceived.path) {\n      fileReceived = '../../' + fileReceived.path;\n    }\n\n    if (!fileReceived) {\n      return res.status(400).json({\n        message: 'No file received',\n        success: false,\n      });\n    }\n\n    const filePath = path.join(__dirname, fileReceived);\n\n    const fileRes = await pdfToImage(filePath, true);\n    if (fileRes && typeof fileRes === 'string') {\n      const outputPath = path.join(__dirname, '../../' + fileRes);\n\n      // Wait for fs to recognize file then send it.\n      const returnInfo = setInterval(async () => {\n        if (fs.existsSync(outputPath)) {\n          await res.sendFile(outputPath);\n\n          // fs.unlinkSync(outputPath);\n          clearInterval(returnInfo);\n        }\n      }, 300);\n    } else {\n      res.status(500).json({\n        message: 'Something went wrong!',\n        success: false,\n      });\n    }\n  } catch (error) {\n    console.error('\\nError while converting pdf: '.red, error);\n\n    res.status(500).json({\n      message: 'Something went wrong while converting your pdf!',\n      success: false,\n    });\n  }\n};\n\nconst test = async (req, res, next) => {\n  try {\n    res.status(200).json({\n      message: 'Great!',\n    });\n  } catch (error) {\n    console.error('Error', error);\n  }\n};\n\nmodule.exports = {\n  convertData,\n  test,\n};\n"],"file":"converterController.js"}